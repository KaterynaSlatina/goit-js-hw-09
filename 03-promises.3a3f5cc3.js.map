{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,aAC7BC,KAAMF,SAASC,cAAc,iBAC7BE,MAAOH,SAASC,cAAc,kBAC9BG,OAAQJ,SAASC,cAAc,oBAGjCH,EAAKC,KAAKM,iBAAiB,SAmB3B,SAAyBC,GACvBA,EAAIC,iBAEaC,OAAOV,EAAKK,MAAMM,OACnBD,OAAOV,EAAKI,KAAKO,OAGjC,IAJA,IAEIC,EAAcF,OAAOV,EAAKM,OAAOK,OAE5BE,EAAI,EAAGA,GAAKD,EAAaC,GAAK,IAvBRR,EA2BhB,KA1BR,IAAIS,SAAQ,SAACC,EAAUC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFI,QAAQ,CAAEN,WAAUV,UAEpBW,EAAO,CAAED,WAAUV,S,GAEpBA,E,KAmBJiB,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUV,EAAKkB,EAALlB,MACjBmB,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAJ,G,IAAGR,EAAQQ,EAARR,SAAUV,EAAKkB,EAALlB,MAClBmB,OAAOI,QAAQ,sBAAqCF,OAAfX,EAAS,QAAYW,OAANrB,EAAM,M,IAhC9D,IAAiCA,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  step: document.querySelector('[name=\"step\"]'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('click', onPromiceCreate);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((position, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    \n  });\n  \n}\n\n\nfunction onPromiceCreate(evt) {\n  evt.preventDefault();\n\n  let valueDelay = Number(refs.delay.value);\n  let valueStep = Number(refs.step.value);\n  let valueAmount = Number(refs.amount.value);\n\n  for (let i = 1; i <= valueAmount; i += 1) {\n    let promoceDelay = valueDelay + valueStep * i;\n  }\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}"],"names":["parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","step","delay","amount","addEventListener","evt","preventDefault","Number","value","valueAmount","i","Promise","position","reject","shouldResolve","Math","random","setTimeout","resolve","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3a3f5cc3.js.map"}