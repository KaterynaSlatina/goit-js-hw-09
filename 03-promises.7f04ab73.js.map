{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,aAC7BC,KAAMF,SAASC,cAAc,iBAC7BE,MAAOH,SAASC,cAAc,kBAC9BG,OAAQJ,SAASC,cAAc,oBAMjC,SAASI,EAAcC,EAAUH,GAC/B,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUH,UAEpBM,EAAO,CAAEH,WAAUH,S,GAEpBA,E,IAZPL,EAAKC,KAAKe,iBAAiB,UAmB3B,SAAyBC,GACvBA,EAAIC,iBAEaC,OAAOnB,EAAKK,MAAMe,OACnBD,OAAOnB,EAAKI,KAAKgB,OAGjC,IAJA,IAEIC,EAAcF,OAAOnB,EAAKM,OAAOc,OAE5BE,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAKxCf,EAJee,EAAI,EAIKjB,OACrBkB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALnB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANH,EAAM,M,IAE3DI,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALnB,MAClBqB,QAAQC,IAAI,sBAAqCC,OAAfpB,EAAS,QAAYoB,OAANH,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  step: document.querySelector('[name=\"step\"]'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onPromiceCreate);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    \n  });\n  \n}\n\n\nfunction onPromiceCreate(evt) {\n  evt.preventDefault();\n\n  let valueDelay = Number(refs.delay.value);\n  let valueStep = Number(refs.step.value);\n  let valueAmount = Number(refs.amount.value);\n\n  for (let i = 1; i <= valueAmount; i += 1) {\n    let position = i + 1;\n    let promiceDelay = valueDelay + valueStep * i;\n  \n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","step","delay","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","Number","value","valueAmount","i","then","param","_$delay","console","log","concat","catch"],"version":3,"file":"03-promises.7f04ab73.js.map"}