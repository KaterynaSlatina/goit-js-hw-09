{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,aAC7BC,KAAMF,SAASC,cAAc,iBAC7BE,MAAOH,SAASC,cAAc,kBAC9BG,OAAQJ,SAASC,cAAc,oBAGjCH,EAAKC,KAAKM,iBAAiB,SAmB3B,SAAyBC,GACvBA,EAAIC,iBAEaC,OAAOV,EAAKK,MAAMM,OACnBD,OAAOV,EAAKI,KAAKO,OADjC,IAEIC,EAAcF,OAAOV,EAAKM,OAAOK,OAErC,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,C,EAvBXR,EA2BhB,KA1BR,IAAIS,SAAQ,CAACC,EAAUC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFI,QAAQ,C,SAAEN,E,MAAUV,IAEpBW,EAAO,C,SAAED,E,MAAUV,GAAQ,GAE5BA,EAAM,KAmBViB,MAAK,EAACP,SAAEA,EAAQV,MAAEA,MACjBkB,OAAOC,QAAQ,uBAAqBT,QAAiBV,MAAU,IAEhEoB,OAAM,EAACV,SAAEA,EAAQV,MAAEA,MAClBkB,OAAOG,QAAQ,sBAAoBX,QAAeV,MAAU,IAhChE,IAAiCA,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  step: document.querySelector('[name=\"step\"]'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('click', onPromiceCreate);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((position, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    \n  });\n  \n}\n\n\nfunction onPromiceCreate(evt) {\n  evt.preventDefault();\n\n  let valueDelay = Number(refs.delay.value);\n  let valueStep = Number(refs.step.value);\n  let valueAmount = Number(refs.amount.value);\n\n  for (let i = 1; i <= valueAmount; i += 1) {\n    let promoceDelay = valueDelay + valueStep * i;\n  }\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}"],"names":["parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","step","delay","amount","addEventListener","evt","preventDefault","Number","value","valueAmount","i","Promise","position","reject","shouldResolve","Math","random","setTimeout","resolve","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.89185ee3.js.map"}